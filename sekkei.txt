要件定義
　バックサイド　Ruby on Railsで実装
　　ユーザー登録
　　ユーザー取り消し
　　ユーザー取得
　　ユーザー編集
　　ログイン　
　　ログアウト
　　chat取得
　　chat投稿
　　chat取り消し
　　フォロー登録
　　フォロー取得
　　フォロー解除
　　いいね登録
　　いいね取得
　　いいね解除
　　チーム取得
　　
　フロンドサイド　
　　googlemapAPI　最後に実装する
　　RakutenAPI　最後に実装する
　　YutubeAPI　余裕あったら使う
　　Fontawesome　○
　　mobile.detectjs 余裕があったら使う
　　awaypoint.js ○
　　animate.css ○
　　カルーセル機能　○
　　ナビバー機能bootstorp(ナビバー)　○　余裕があったら、レスポンシブとeast,westを実装する。
　　
　　Vue
　　login.js ○
　　sign.js　○
　　team.js　○
　　topapge_afterlogin.js　○ 出来てはいるが。team.idを使って改善できるはず。templateを使って、配列を回数ごとに条件分岐して、team.idを所得する。
　　user.js ○　○
　　user_edit.js ○　
　　user_other.js　○　teamからのuser情報（特にuserid）を所得して、データを受け渡しをおこなわなければならない
　　
　　デザイン
　　login.htmlcss ○
　　sign.htmlcss　○
　　team.htmlcss　○
　　toppage.htmlcss　○
　　toppageafterlogin.htmlcss ○
　　user.htmlcss ○できたら、画像の円形を縦横比をずらさないようにする。railsapiからデータをとって、それをVueで、cssのbackground-imgに加えないといけない
　　user_edit.htmlcss ○
　　user_other.htmlcss ○
　
サイトマップ

　トップページーーーーーーーーーーー
　　|　　　↑　　　　　　　　　　　　|
　　|　　　|　　　　　　　ーーーーーーーーーーーーーー
　　|　　　|　　　　　　　|                          |
　　|　　　|　　　　　ログイン　　　　　　　　　　会員登録
　　|　　　|　　　　　　　|                          |
　　|　　　|  　　　　　　ーーーーーーーーーーーーーー
　　|　　　|  　　　　　　 　　　　　|
　　|　　　ーーーーーーーーーーーーーー
　　|
　　|
　　|
　　|ーーーーーーーーーーーーーーーーー
　　|　　　　　　　　　　　　　　　　 |
　　|                                 |
　team✖️30                     ーーー>user
　  |                         |       |　　　　　　　　　　
　  |ーuserーーーーーーーーーー 　　　|ーrelationship
　  |                                 |       |
　  |ーchat                           |       |ーfollow
　  |                                 |       |
　  |ーfavoirite                      |       |ーfolloer             
　                                    |
　                                    |
　                                    |ーfavorite
トップページ２種類
　ログイン前とログイン後
user2種類
　自分のアカウント画面と他人アカウント画面
　

ER図
　users                       chats                 teams
　 id                          id                    id
　 name               1:多 　　user_id    多：1   　 name
　 email         ーーーーーー＞content＜ーーーーーーー               
　 password_digest             team_id
　   |      |　　|　　　　　　　　|
　   |      |    |                |
1:多 |  1:多|    |                |1:多
　   |      |    |                |
　   ↓　　　↓    |　　1:多        ↓
　relationship   ーーーーーー＞ favoirtes
　 id                           id
　 user_id                      user_id
　 follow_id                    chat_id
　 
　 
teams 追加

logo_img
conference
division
founded
base
championship
arena
arena_img
player1
player2
player3
player4
player5
player1_img
player2_img
player3_img
player4_img
player5_img


https://web.postman.co/build/workspace/My-Workspace~c29bbb46-8ff9-41da-89c2-bea8e3e21ca0/history/13404572-324ce338-8e05-4e78-bbd2-86b50e208a4f


https://172.31.52.44:8080


https://fae945d999374a79b64f384ea8675d41.vfs.cloud9.us-east-1.amazonaws.com/


curlテスト

user
 get　○
 get(show)　○
 post ○
 put ○
 delete ○
 
team
 get ○  
 
sessions
 post  ○
 destroy ○
 
chat
 get　○
 post　○
 delete ○
 
relationship
 post ○
 delete　○
 
favoirtes
 post ○
 delete　○
 
画像保存テスト
　get ○
　post　○
　put ○
　delete　○　nullを代入する
　
カウント数 ○
　
　POST　user
　curl  -H "Accept: application/json" -X POST http://localhost:8080/users -d 'user[name]=test1&user[email]=test1@gmail.com&user[password]=222222'
　
  curl  -H "Accept: application/json" -X POST http://localhost:8080/users -d 'user[name]=test3&user[email]=test3@gmail.com&user[password]=333333'
  
  POST session
 curl -H "Accept: application/json" -X POST http://localhost:8080/sessions/create -d 'session[email]=test1@gmail.com&session[password]=222222'
  
  GET team
  curl -H "Content-Type: application/json" -X GET http://localhost:8080/teams/2


　PUT
　curl  -H "Accept: application/json" -X PUT  http://localhost:8080/users/1 -d 'user[name]=test333&user[email]=test1@gmail.com'
　
　POST chat 
　curl -H "Content-Type: application/json" -X POST http://localhost:8080/chats/create -d '{"session": {"user_id": 2},"chat": {"content": "testtest", "team_id": 2}}'
　
　DELETE chat
　curl -H "Content-Type: application/json" -X DELETE http://localhost:8080/chats/destroy -d '{"session": {"user_id": 2},"id": 2}'
　
　POST relationship
　curl -H "Content-Type: application/json" -X POST http://localhost:8080/relationships/create -d '{"session": {"user_id": 2},"follow_id": 3}'
　
　DELETE relationship
　curl -H "Content-Type: application/json" -X DELETE http://localhost:8080/relationships/destroy -d '{"session": {"user_id": 2},"follow_id": 3}'
　
　POST favoirite
　curl -H "Content-Type: application/json" -X POST http://localhost:8080/favorites/create -d '{"session": {"user_id": 3},"chat_id": 2}'
　
　DELETE favoirite
　curl -H "Content-Type: application/json" -X DELETE http://localhost:8080/favorites/destroy -d '{"session": {"user_id": 3},"chat_id": 2}'
　
　
　
　
　mount_uploader :logo_img, LogoUploader
  mount_uploader :arena_img, ArenaUploader
  mount_uploader :player1_img, Player1Uploader
  mount_uploader :player2_img, Player2Uploader
  mount_uploader :player3_img, Player3Uploader
  mount_uploader :player4_img, Player4Uploader
  mount_uploader :player5_img, Player5Uploader
  
  
  
  
 https://qiita.com/iwato/items/c70eeb87f944043ba356
 
 rails s -b 0.0.0.0
 
 
 curl  -H "Accept: application/json" -X PUT  http://localhost:8080/users/2 -F 'user[icon_img]=@public/melo.jpg'
 
 curl  -H "Accept: application/json" -X PUT  http://localhost:8080/users/2 -F 'user[icon_img]=null'